name: Roll release

permissions:
  contents: write
  id-token: write

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/zxtx

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Cache pip and build wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create and activate venv
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
          python -m pip install -r requirements.txt
          python -m pip install .

      - name: Run pre-commit
        run: |
          source .venv/bin/activate
          pre-commit run --all-files || true

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          PYTHONPATH=src coverage run -m pytest -m "not slow"
          coverage report
          coverage xml

      - name: Get version from setup.cfg
        id: get_version
        run: |
          source .venv/bin/activate
          VERSION=$(python3 -c "import configparser;cfg=configparser.ConfigParser();cfg.read('setup.cfg');print(cfg['metadata']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build package
        run: |
          source .venv/bin/activate
          python -m build

      - name: Push Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.get_version.outputs.version }}
          git push origin ${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          generate_release_notes: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
